basePath: /
definitions:
  books.AddBookRequestBody:
    properties:
      author:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  books.UpdateBookRequestBody:
    properties:
      author:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  models.Book:
    properties:
      author:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  models.User:
    properties:
      author:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: test@mail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API documentation
  version: 1.0.0
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all exists books.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: get all exists books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Create a new book.
      parameters:
      - description: Book Data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/books.AddBookRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
      security:
      - ApiKeyAuth: []
      summary: create a new book
      tags:
      - Books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by given ID.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: no content
          schema:
            type: ""
      security:
      - ApiKeyAuth: []
      summary: delete book by given ID
      tags:
      - Books
    get:
      consumes:
      - application/json
      description: Get book by given ID.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      summary: get book by given ID
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update book.
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book Data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/books.UpdateBookRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
      security:
      - ApiKeyAuth: []
      summary: update book
      tags:
      - Books
  /token/new:
    get:
      consumes:
      - application/json
      description: Create a new access token.
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: create a new access token
      tags:
      - Token
  /users:
    get:
      consumes:
      - application/json
      description: Get all exists users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get all exists users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
